apiVersion: apps/v1
kind: Deployment
metadata:
  name: $NAME
  namespace: default
  labels:
    app: $NAME
spec:
  replicas: 3
  selector:
    matchLabels:
      app: $NAME
  template:
    metadata:
      labels:
        app: $NAME
    spec:
      automountServiceAccountToken: false
      containers:
      - name: $NAME
        image: $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$NAME:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_HOSTNAME
          value: $DB_HOSTNAME
        ports:
        - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 3
        resources:
          requests:
            cpu: "125m"
            memory: "256Mi"
          limits:
            cpu: "250m"
            memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: $NAME
  namespace: default
spec:
  selector:
    app: $NAME
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: default
  name: $NAME
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: $NAME-eks
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: $CERTIFICATE_ARN
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: $NAME
              port:
                number: 80